<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="green.mapper.BoardMapper">

<!-- SQL 쿼리문에서 비교연산자 사용하는 경우  
	XML에서는  <,>등 비교연산자의 경우 XML규칙상 에러 나기때문에,
	이기호를 연산자로 인식하도록 하기 위해서는 SQL문을 CDATA로 묶어 주어야 한다.
	<![CDATA[ SELECT * FROM table WHERE id > 1 ]]> 
-->

<!-- ** 반복문 사용 : checkList -->

	<select id="checkList" resultType="vo.BoardVO">
		select seq,title,id,regdate,cnt,root,step,indent from board
		 where id in 
		<foreach collection="check" item="it" open="(" close=")" separator=",">
			#{it}
		</foreach>
		order by root desc, step asc
	</select>


<!-- ** Ajax idBoardList -->
	<select id="aidBList" resultType="vo.BoardVO">
		select seq,title,id,regdate,cnt,root,step,indent from board 
		where id=#{id} order by root desc, step asc 
	</select>

<!-- ** SearchCriteria PageList ****** 
=> searchType 별 검색 조건문 만들기
=> Sql , include 태그 : 반복되는 쿼리 묶기

=> title Like '%#{keyword}%' 
=> '%' + #{keyword} + '%'
=> CONCAT(i1,i2) , ||
=> CONCAT : 두개의 문자열 합침 
			3개의 문자열을 합치려면 아래처럼 함수를 함수로 감싸줘야 한다. 
			( MySql은 3개 가능 )
			
=> 만약 keyword 를 선택하지 않은 경우 라면
   select id from board where id like '%%' ;
   -> 무조건(전체검색) 과 동일	
   
=> 바인딩 변수 사용하기
   -> 정의: <bind name="keyVal" value="'%'+keyword+'%'"/>	
   -> 사용: title Like #{keyVal}
--> 

<!-- select * from board where title LIKE '%Java%'  --> 
<sql id="search">
  <if test="keyword != null">
  	<bind name="keyVal" value="'%'+keyword+'%'"/>
  </if>	
  <choose>
  	<when test="searchType=='t'.toString()">
  		and title Like #{keyVal} )
  		<!-- and title Like  CONCAT('%',CONCAT(#{keyword},'%')) -->
  	</when>
  	<when test="searchType=='c'.toString()">
  		and content Like #{keyVal} )
  	</when>
  	<when test="searchType=='w'.toString()">
  		and id Like  '%' || #{keyword} || '%')
  	</when>
  	<when test="searchType=='tc'.toString()">
  		and title   Like  '%' || #{keyword} || '%' 
  		or  content Like  '%' || #{keyword} || '%')
  	</when>
  	<when test="searchType=='cw'.toString()">
  		and content Like  '%' || #{keyword} || '%' 
  		or  id      Like  '%' || #{keyword} || '%')
  	</when>
  	<when test="searchType=='tcw'.toString()">
  		and title   Like  '%' || #{keyword} || '%'
  		or  content Like  '%' || #{keyword} || '%' 
  		or  id      Like  '%' || #{keyword} || '%')
  	</when>
  	<otherwise>)</otherwise> 
  </choose>
</sql>

<!-- ** searchList 기능 ( Sql문 추가 ) 
		=> searchRowsCount 
		   select count(*) from board where title like '%Spring%' OR content like '%Spring%' ;
		=> searchList   
		   select ~~~ from 
		   (...   where title like '%Spring%' OR content like '%Spring%' ) 
		   where rnum between #{sno} and #{eno}	 
		=> 그러므로 동일하게 포함되는 조건문을 별도의 쿼리로_<sql 만들어 호출_<include  해 사용함. 
		   동일하게 적용되므로 괄호 (...) 를 맞춰 주기위해 searchRowsCount 에서는  where 앞에 ( 를 넣어줌   	   
		   -->
	<select id="searchRowsCount" resultType="int">
	<![CDATA[
		select count(*) from board where ( seq > 0 ]]>
		<include refid="search"></include>
		<!-- 조건문의 id : search -->
	</select>

	<select id="searchList" resultType="vo.BoardVO">
	<![CDATA[
		select seq,title,id,regdate,cnt,root,step,indent from 
		(select b.* , ROW_NUMBER() OVER(order by root desc, step asc) rnum from board b
		where  seq > 0 ]]>
		<include refid="search"></include>
		<!-- 조건문의 id : search -->
		where rnum between #{sno} and #{eno}
	</select>

<!-- ** 조회수증가 -->
	<update id="countUp">
		update board set cnt=cnt+1 where seq=#{seq}
	</update>
	
<!-- ** 답글입력 ~~~~~~~~~~~~~~~~~~~~~~~~~~~
=> OLD 구문
	insert into board values (
		(select nvl(max(seq),0)+1 from board),
		#{title},#{id},#{content},SYSDATE,0,#{root},#{step},#{indent})
-->	
	<update id="stepUpdate">
		update board set step=step+1 where root=#{root} and step>=#{step}
	</update>
	<insert id="replyInsert">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			select nvl(max(seq),0)+1 from board
		</selectKey>
		insert into board values (
		#{seq},#{title},#{id},#{content},SYSDATE,0,#{root},#{step},#{indent})
	</insert>

<!-- ** PageList ~~~~~~~~~~~~~~~~~~~~~~-->
	<select id="totalRowCount" resultType="int">
		select count(*) from board
	</select>
	
	<select id="pageList" resultType="vo.BoardVO">
		select seq,title,id,regdate,cnt,root,step,indent from 
		(select b.* , ROW_NUMBER() OVER(order by root desc, step asc) rnum from board b) 
		where rnum between #{sno} and #{eno}
	</select>

	<select id="selectList" resultType="vo.BoardVO">
		select seq,title,id,regdate,cnt,root,step,indent from 
		board order by root desc, step asc
	</select>
	
	<select id="selectOne" resultType="vo.BoardVO">
		select * from board where seq = #{seq}
	</select>
<!-- 원글 입력 
** selectKey Test
=> https://deeplify.dev/back-end/spring/select-key
=> AutoNumbering 을 편리하게 할 수 있도록 지원
=> DB작업중 먼저 어떤 키값을 가져와서 증가시켜서 입력하거나 혹은 입력후에 증가된 키값을 가져올 필요가 있을때,
   selectKey를 이용하면 별도의 쿼리로직 없이 해당 메소드에서 일괄처리할 수가 있음.
   keyProperty: selectKey구문의 결과가 셋팅될 대상 프로퍼티.
   resultType: 결과의 타입.
   order: BEFORE 또는 AFTER
          BEFORE로 설정하면 키를 먼저 조회하고 그 값을 keyProperty 에 셋팅한 뒤 insert 구문실행.
          AFTER로 설정하면 insert 구문을 실행한 뒤 selectKey 구문 실행.
          오라클에서는 insert구문 내부에서 일관된 호출형태로 처리한다.
   statementType: STATEMENT, PREPARED 또는 CALLABLE중 하나 선택가능.
          마이바티스에게 Statement, PreparedStatement 또는 CallableStatement를 사용하게 한다.
          디폴트는 PREPARED.
=> OLD 구문
	insert into board values ( 
		(select nvl(max(seq),0)+1 from board),
		#{title},#{id},#{content},SYSDATE,0,
		(select nvl(max(seq),0)+1 from board),0,0)          
-->
	<insert id="insert">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			select nvl(max(seq),0)+1 from board
		</selectKey>
		insert into board values ( 
			#{seq},#{title},#{id},#{content},SYSDATE,0,
			#{seq},0,0)
	</insert>
	
	<update id="update">
		update board set title=#{title}, content=#{content} where seq=#{seq}
	</update>
	
	<delete id="delete">
		delete from board where seq=#{seq}	
	</delete>

</mapper>  
  